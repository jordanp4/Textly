package com.jordanpeterson.textly.messages;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.support.v4.content.LocalBroadcastManager;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

import com.jordanpeterson.textly.R;
import com.jordanpeterson.textly.utils.ParseConstants;
import com.parse.FindCallback;
import com.parse.ParseException;
import com.parse.ParseQuery;
import com.parse.ParseRelation;
import com.parse.ParseUser;

public class ListUsersActivity extends Activity {

	private String mCurrentUserId;
	private ArrayAdapter<String> mNamesArrayAdapter;
	private ArrayList<String> mNames;
	private ListView mUsersListView;
	private Button mLogoutButton;
	private ProgressDialog mProgressDialog;
	private BroadcastReceiver mReceiver = null;
	protected ParseRelation<ParseUser> mFriendsRelation;
	protected ParseUser mCurrentUser;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_list_users);

		mCurrentUser = ParseUser.getCurrentUser();
		mFriendsRelation = mCurrentUser
				.getRelation(ParseConstants.KEY_FRIENDS_RELATION);
		mNames = new ArrayList<String>();

		ParseQuery<ParseUser> query = mFriendsRelation.getQuery();
		// Don't include yourself!
		query.whereNotEqualTo("objectId", mCurrentUserId);
		query.findInBackground(new FindCallback<ParseUser>() {

			@Override
			public void done(List<ParseUser> userList, ParseException e) {
				if (e == null) {
					for (int i = 0; i < userList.size(); i++) {
						mNames.add(userList.get(i).getUsername().toString());
					}
					mUsersListView = (ListView) findViewById(R.id.usersListView);
					mNamesArrayAdapter = new ArrayAdapter<String>(
							getApplicationContext(), R.layout.user_list_item,
							mNames);
					mUsersListView.setAdapter(mNamesArrayAdapter);
					mUsersListView
							.setOnItemClickListener(new AdapterView.OnItemClickListener() {

								@Override
								public void onItemClick(AdapterView<?> a,
										View v, int i, long l) {
									openConversation(mNames, i);

								}

								private void openConversation(
										ArrayList<String> mNames, int pos) {
									ParseQuery<ParseUser> query = ParseUser
											.getQuery();
									query.whereEqualTo("username",
											mNames.get(pos));
									query.findInBackground(new FindCallback<ParseUser>() {

										@Override
										public void done(List<ParseUser> user,
												ParseException e) {
											if (e == null) {
												Intent intent = new Intent(ListUsersActivity.this, MessagingActivity.class);
												intent.putExtra("RECIPIENT_ID", user.get(0).getObjectId());
												startActivity(intent);
											} else {
												Toast.makeText(
														getApplicationContext(),
														"Error finding that user!",
														Toast.LENGTH_LONG)
														.show();
											}

										}
									});

								}
							});

				} else {
					Toast.makeText(ListUsersActivity.this,
							"Error loading user list", Toast.LENGTH_LONG)
							.show();
				}

			}
		});
		
		

		mProgressDialog = new ProgressDialog(this);
		mProgressDialog.setTitle("Loading");
		mProgressDialog.setMessage("Please Wait...");
		mProgressDialog.show();

		// broadcast receiver to listen for the broadcast
		// from MessageService

		mReceiver = new BroadcastReceiver() {

			@Override
			public void onReceive(Context context, Intent intent) {
				Boolean success = intent.getBooleanExtra("success", false);
				Toast.makeText(ListUsersActivity.this, "Sinch has started and is working!", Toast.LENGTH_LONG).show();
				mProgressDialog.dismiss();

				// Show a toast message is the Sinch service failed to start
				if (!success) {
					Toast.makeText(ListUsersActivity.this,
							"Messaging service failed to start",
							Toast.LENGTH_LONG).show();
				}

			}

		};

		LocalBroadcastManager
				.getInstance(this)
				.registerReceiver(
						mReceiver,
						new IntentFilter(
								"com.jordanpeterson.textly.messages.ListUsersActivity"));

	}
	
}
